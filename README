How to get risealumni up and running

START BY MAKING SURE your ruby gems are version 1.3.4 or greater:
* (sudo) gem update --system

Then add the github repo to your gems:
* gem sources -a http://gems.github.com

* risealmuni runs on Ruby on Rails, so first you need to get rails running. Go download rails (http://rubyonrails.org/down) and follow it's instructions to get rails running.
* The directions in this README file assume some knowledge of rails, but I'll go through it a bit here first.
* The first thing to do is install the ruby gems that are required. For each gem listed in the README, at the command line, do something like "gem install [gem name]" or "sudo gem install [gem name]".
* The next thing to do is set up your database (steps 1-4 in the README). risealumni is setup to use MySQL by default, so just follow the instructions in the README and configure the files for your computer.
* Skip step 5.
* Now setup global variable (site name and url and stuff) (steps 6-17) and change the (r)html and css to suit your taste.
* Start risealumni with the typical "./script/server" and point your browser to "http://localhost:3000".


Instructions:

Quick Setup (currently for non-Windows users only - due to ferret gem issues):

  1. Edit config/database.yml.tmp to reflect the database names you would like to use.
  2. Edit config/environments/production.rb so asset_host reflects the name of the production asset server
  3. MAKE SURE YOU UPGRADE TO GEMS 1.3.4.
  4. RUN gem sources -a http://gems.github.com
  6. rake test
  7. See step #5 below to continue setup (near "Setup default values")

The getting_started rake task will install all required gems, create the databases in database.yml, 
and migrate the development and test databases.

Manual Setup:

Install the Required Gems:

1. Install these gems:
  - youtube-g
  - uuidtools
  - ferret
  - avatar
  - icalendar
  - will_paginate
  - ar_mailer
  - mime-types
  - json
  - twitter4r
  - fiveruns-memcache-client
  - facebooker
  - rflickr
  - RedCloth
  - hpricot
  - rmagick (will require ImageMagick, which is not a gem)
  - win32console (windows only)
2. Run "rake gems:build" to build the gems that need building


TIPS:
Installing ImageMagick and RMagick
See these posts for tips:
   http://b.lesseverything.com/2007/9/26/installing-imagemagick-and-rmagick-on-mac-os-x
   http://www.randycullom.com/chatterbox/archives/2006/12/installing_imag.html

Installing Starling and Workling
See these posts for tips:
   http://railscasts.com/episodes/128-starling-and-workling

Setup the databases:

  1. Edit config/database.yml.tmp to reflect the database names you would like to use.
  2. cp config/database.yml.tmp config/database.yml
  3. rake db:create:all
  4. rake db:migrate

All tests pass:
  5. rake

Setup default values:

  6. Edit config/initializers/exception_notifier.rb
  7. Edit the config/environment.rb file and change the config.action_controller.session data
  8. Edit config/environments/development.rb and production.rb to suit your tastes. (Specifically config.action_mailer.delivery_method)
  9. Change the values in config/initializers/global_variables.rb to match your site and domain.(Specifically SITE_NAME_FULL,SITE_NAME, SITE, MAILER_TO_ADDRESS, MAILER_FROM_ADDRESS, ADMIN_RECIPIENTS)
  10. Edit the ActionMailer settings in config/initializers/global_variables.rb to match your domain.(Specifically "address","domain","user_name","password")
  12. Paste "Your twitter login" and "Your twitter password" in config/twitter.yml.
  13. Paste "Your domain" and  "Your gmaps api key" in config/gmaps_api_key.yml.
  14. Go to the section "About flickr integration" and follow the steps to either use flickr or not.
  15. Edit public/404.html, public/500.html, app/views/account_mailer/*
  16. Edit application.css to suite your tastes.
  17. Edit tos,academics,contact,credits,history and about_us pages in app/views/home/tos,app/views/home/.
  

About flickr integration
------------------------

If you WANT to have flickr integration in your application, follow these setup instructions:
  1. Go http://flickr.com/services/api/keys/apply/ to apply for a flickr api key.
  2. Copy the Key and Secret into config/initializers/global_variables.rb.(Specifically FLICKR_USER_ACCOUNT,FLICKR_KEY, FLICKR_SECRET)
  3. From the command line, run "ruby script/authorize_flickr.rb" and follow the instructions.
  This stores the flickr auth stuff into config/flickr.cache. If you add this cache file to your source control, then you shouldn't have to repeat this in production. Alternatively, you can get a different key for production, if you'd like.

Facebook Configuration
----------------------

  1. Add the Developer Application.
  
  2. Create a New Application.
     See these posts for tips:
     http://developers.facebook.com/get_started.php

  3. Update the Facebook Application settings to point to your publicly available host.

  4. Edit the facebooker.yml file to reflect your Facebook Application settings page.(Specifically api_key,secret_key,callback_url)

  5. Register the Facebook Post Templates:
    We need to register a "template bundle", which will be used to post updates to the News Feed of people who comment on your blog.
      1. Go to the list of your Facebook Apps and click on the app we just created on the left
      2. Click "Create Feed Template" in the list of links on the right
      3. Make sure your correct App is selected in the box, then click Next
      4. In the "One Line Template" box, paste this exact text 
        "{*actor*} has commented on a blog post titled {*titleText*} by {*target*} on {*blog*}."
      5. In the "Sample Template Data" box, paste this (make sure quote marks are still  quotes and not fancy curly-quotes) 
        "{"blog":"<a href='http://risealumni.com'>My Blog Name</a>", "titleText":"Test Post Title"}"
      6. Click Next
      7. In the "Short Story Template Title" box, paste this exact text
        "{*actor*} has commented on my blog post titled {*titleText*} on {*blog*}."
      8. In the "Short Story Template Body" box, paste this exact text
        "{*actor*} has commented {*comment*} on my blog post titled {*titleText*} at {*blog*}."
      9. Now click Skip (and ignore/Okay any errors) until you get to the final page and then click "Register Template Bundle"
      10.It will give you a Template Bundle ID, and you'll want to get a copy of that.and paste it in BLOG_COMMENT_BUNDLE_ID = "Template Bundle ID" at global_variables.rb file.

    Now whole process are repeated for posting updates to the News Feed of people who comment on your Profile's wall.
     In step 4  
       "{*actor*} has scribbled on {*target*}'s wall at {*userprofile*}."
     In step 5 
       "{"userprofile":"<a href='http://risealumni.com'>My Profile</a>"}"
     In step 7
       "{*actor*} has scribbled on my school community wall at {*userprofile*}."
     In step 8
       "{*actor*} has written something on my profile at {*userprofile*}."
     It will give you a Template Bundle ID, and you'll want to get a copy of that.and paste it in PROFILE_COMMENT_BUNDLE_ID = "Template Bundle ID" at global_variables.rb file.

    Step 1-3 are repeated for posting updates to the News Feed of people who post blog.
     In step 4  
       "{*actor*} has published a blog post titled {*blog_title*}."
     In step 5 
       "{"blog_title":"<a href='http://risealumni.com'>My Blog</a>"}"
     Now click Skip (and ignore/Okay any errors) until you get to the final page and then click "Register Template Bundle".
     It will give you a Template Bundle ID, and you'll want to get a copy of that.and paste it in BLOG_BUNDLE_ID = "Template Bundle ID" at global_variables.rb file.

    Step 1-10 are repeated for posting updates to the News Feed of people who started following you.
     In step 4  
       "{*actor*} has started following {*target*}."
     In step 5 
       "{"userprofile":"<a href='http://risealumni.com'>My Profile</a>"}"
     In step 7
       "{*actor*} has started following my updates on {*actorprofile*}."
     In step 8
       "{*actor*} has started following my profile, my updates, comments on my school alumni community. That's great!"
     It will give you a Template Bundle ID, and you'll want to get a copy of that.and paste it in FOLLOW_BUNDLE_ID = "Template Bundle ID" at global_variables.rb file.

    Now register a "template bundle", which will be used to post updates to the News Feed of people who want to friend with you.Step 1-10 are repeated
     In step 4, paste this exact text 
       "{*actor*} is now friends with {*target*} on {*userprofile*}."
     In step 5 
       "{"userprofile":"<a href='http://risealumni.com'>My Profile</a>","profile":"<a href='http://risealumni.com'>My Friend Profile</a>"}"
     In step 7
       "{*actor*} is now friends with {*target*} on {*profile*}."
     In step 8
       "{*actor*} and {*target*} are now following each other on {*profile*} . That's awesome!."
    It will give you a Template Bundle ID, and you'll want to get a copy of that.and paste it in BE_FRIEND_BUNDLE_ID = "Template Bundle ID" at global_variables.rb file.











